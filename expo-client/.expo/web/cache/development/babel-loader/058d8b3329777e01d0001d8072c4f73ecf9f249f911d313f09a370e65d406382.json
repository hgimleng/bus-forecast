{"ast":null,"code":"import React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { DataTable, Text } from 'react-native-paper';\nimport ListBusTime from \"./displays/ListBusTime\";\nimport ListBusInfo from \"./displays/ListBusInfo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ArrivalListView(_ref) {\n  var arrivalData = _ref.arrivalData,\n    updateTime = _ref.updateTime,\n    selectedStop = _ref.selectedStop,\n    busDiff = _ref.busDiff;\n  function getBusType(busTimings) {\n    for (var stopSequence in busTimings) {\n      if (busTimings[stopSequence]['busType'] != 'NA') {\n        return busTimings[stopSequence]['busType'];\n      }\n    }\n  }\n  function getBusLoad(busTimings) {\n    for (var stopSequence in busTimings) {\n      if (busTimings[stopSequence]['load'] != 'NA') {\n        var load = busTimings[stopSequence]['load'];\n        return load;\n      }\n    }\n  }\n  function formatTimeDiff(secondsArr) {\n    function secondsToStr(seconds) {\n      var minutes = Math.floor(seconds / 60);\n      var remainingSeconds = Math.floor(seconds % 60);\n      return minutes + \":\" + remainingSeconds.toString().padStart(2, '0');\n    }\n    function findMedian(arr) {\n      arr.sort(function (a, b) {\n        return a - b;\n      });\n      var middle = Math.floor(arr.length / 2);\n      return arr.length % 2 === 1 ? arr[middle] : (arr[middle - 1] + arr[middle]) / 2;\n    }\n    return secondsToStr(findMedian(secondsArr));\n  }\n  return _jsxs(DataTable, {\n    children: [_jsxs(DataTable.Header, {\n      children: [_jsx(View, {\n        style: styles.busCellView,\n        children: _jsx(Text, {\n          variant: \"titleSmall\",\n          children: \"Bus\"\n        })\n      }), _jsx(View, {\n        style: styles.timeCellView,\n        children: _jsx(Text, {\n          variant: \"titleSmall\",\n          children: \"Time\"\n        })\n      }), _jsx(View, {\n        style: styles.infoCellView,\n        children: _jsx(Text, {\n          variant: \"titleSmall\",\n          children: \"Next Stop\"\n        })\n      })]\n    }), arrivalData.map(function (item) {\n      var arrivalTime = item['busTimings'][selectedStop] ? item['busTimings'][selectedStop]['time'] : '-';\n      var timeDiff = busDiff[item['busId'] - 1] ? formatTimeDiff(busDiff[item['busId'] - 1]) : null;\n      var busLocation = item['busLocation'];\n      var busType = getBusType(item['busTimings']);\n      var busLoad = getBusLoad(item['busTimings']);\n      return _jsxs(DataTable.Row, {\n        children: [_jsx(View, {\n          style: styles.busCellView,\n          children: _jsx(Text, {\n            children: item['busId']\n          })\n        }), _jsx(ListBusTime, {\n          style: styles.timeCellView,\n          arrivalTime: arrivalTime,\n          timeDiff: timeDiff\n        }), _jsx(ListBusInfo, {\n          style: styles.infoCellView,\n          busLocation: busLocation,\n          busType: busType,\n          busLoad: busLoad\n        })]\n      }, item['busId']);\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  busCellView: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  timeCellView: {\n    flex: 2,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  infoCellView: {\n    flex: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default ArrivalListView;","map":{"version":3,"names":["React","ScrollView","StyleSheet","View","DataTable","Text","ListBusTime","ListBusInfo","jsx","_jsx","jsxs","_jsxs","ArrivalListView","_ref","arrivalData","updateTime","selectedStop","busDiff","getBusType","busTimings","stopSequence","getBusLoad","load","formatTimeDiff","secondsArr","secondsToStr","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","findMedian","arr","sort","a","b","middle","length","children","Header","style","styles","busCellView","variant","timeCellView","infoCellView","map","item","arrivalTime","timeDiff","busLocation","busType","busLoad","Row","create","flex","alignItems","justifyContent"],"sources":["C:/Users/Heng/Dropbox/PC (2)/Desktop/project/bus-forecast/expo-client/components/ArrivalListView.js"],"sourcesContent":["import React from 'react'\r\nimport { ScrollView, StyleSheet, View } from 'react-native'\r\nimport { DataTable, Text } from 'react-native-paper'\r\n\r\nimport ListBusTime from './displays/ListBusTime'\r\nimport ListBusInfo from './displays/ListBusInfo'\r\n\r\nfunction ArrivalListView({ arrivalData, updateTime, selectedStop, busDiff }) {\r\n    function getBusType(busTimings) {\r\n        // Loop through all bus timings and find first non 'NA' bus type\r\n        for (const stopSequence in busTimings) {\r\n            if (busTimings[stopSequence]['busType'] != 'NA') {\r\n                return busTimings[stopSequence]['busType']\r\n            }\r\n        }\r\n    }\r\n\r\n    function getBusLoad(busTimings) {\r\n        // Loop through all bus timings and find first non 'NA' bus load\r\n        for (const stopSequence in busTimings) {\r\n            if (busTimings[stopSequence]['load'] != 'NA') {\r\n                const load = busTimings[stopSequence]['load']\r\n                return load\r\n            }\r\n        }\r\n    }\r\n\r\n    function formatTimeDiff(secondsArr) {\r\n        function secondsToStr(seconds) {\r\n            const minutes = Math.floor(seconds / 60)\r\n            const remainingSeconds = Math.floor(seconds % 60)\r\n            return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`\r\n        }\r\n\r\n        function findMedian(arr) {\r\n            arr.sort((a, b) => a - b)\r\n            const middle = Math.floor(arr.length / 2)\r\n            return arr.length % 2 === 1 ? arr[middle] : (arr[middle - 1] + arr[middle]) / 2;\r\n        }\r\n        \r\n        return secondsToStr(findMedian(secondsArr))\r\n    }\r\n\r\n    return (\r\n        <DataTable>\r\n            <DataTable.Header>\r\n                <View style={styles.busCellView}><Text variant='titleSmall'>Bus</Text></View>\r\n                <View style={styles.timeCellView}><Text variant='titleSmall'>Time</Text></View>\r\n                <View style={styles.infoCellView}><Text variant='titleSmall'>Next Stop</Text></View>\r\n            </DataTable.Header>\r\n            {arrivalData.map(item => {\r\n                const arrivalTime = item['busTimings'][selectedStop] ? item['busTimings'][selectedStop]['time'] : '-'\r\n                const timeDiff = busDiff[item['busId']-1] ? formatTimeDiff(busDiff[item['busId']-1]) : null\r\n                const busLocation = item['busLocation']\r\n                const busType = getBusType(item['busTimings'])\r\n                const busLoad = getBusLoad(item['busTimings'])\r\n\r\n                return (\r\n                <DataTable.Row key={item['busId']}>\r\n                    <View style={styles.busCellView}><Text>{item['busId']}</Text></View>\r\n                    <ListBusTime style={styles.timeCellView} arrivalTime={arrivalTime} timeDiff={timeDiff} />\r\n                    <ListBusInfo style={styles.infoCellView} busLocation={busLocation} busType={busType} busLoad={busLoad} />\r\n                </DataTable.Row>)\r\n            })}\r\n        </DataTable>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    busCellView: {\r\n        flex: 1,\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n    },\r\n    timeCellView: {\r\n        flex: 2,\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n    },\r\n    infoCellView: {\r\n        flex: 5,\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n    }\r\n});\r\n\r\nexport default ArrivalListView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}