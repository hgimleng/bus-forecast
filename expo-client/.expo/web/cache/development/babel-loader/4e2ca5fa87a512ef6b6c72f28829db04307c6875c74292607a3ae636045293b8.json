{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ButtonGroup, Text } from '@rneui/themed';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DirectionSelector(_ref) {\n  var directions = _ref.directions,\n    onClick = _ref.onClick,\n    selectedDirection = _ref.selectedDirection;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      h4: true,\n      children: \"Select Direction:\"\n    }), _jsx(ButtonGroup, {\n      buttons: Object.entries(directions).map(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n          key = _ref3[0],\n          direction = _ref3[1];\n        return direction.text + (direction.loopDesc ? \"\\n\" + direction.loopDesc + \" (Loop)\" : '');\n      }),\n      selectedIndex: selectedDirection - 1,\n      onPress: function onPress(value) {\n        onClick(value + 1);\n      },\n      containerStyle: {\n        height: 50,\n        width: '90%'\n      },\n      buttonStyle: {\n        borderColor: 'skyblue',\n        borderWidth: 1\n      },\n      selectedButtonStyle: {\n        backgroundColor: 'skyblue'\n      },\n      textStyle: {\n        textAlign: 'center',\n        color: 'black'\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    borderTopColor: 'lightgrey',\n    borderTopWidth: 1,\n    marginBottom: 12\n  }\n});\nexport default DirectionSelector;","map":{"version":3,"names":["React","View","StyleSheet","ButtonGroup","Text","jsx","_jsx","jsxs","_jsxs","DirectionSelector","_ref","directions","onClick","selectedDirection","style","styles","container","children","h4","buttons","Object","entries","map","_ref2","_ref3","_slicedToArray","key","direction","text","loopDesc","selectedIndex","onPress","value","containerStyle","height","width","buttonStyle","borderColor","borderWidth","selectedButtonStyle","backgroundColor","textStyle","textAlign","color","create","alignItems","borderTopColor","borderTopWidth","marginBottom"],"sources":["C:/Users/Heng/Dropbox/PC (2)/Desktop/project/bus-forecast/expo-client/components/DirectionSelector.js"],"sourcesContent":["import React from 'react'\r\nimport { View, StyleSheet } from 'react-native'\r\nimport { ButtonGroup, Text } from '@rneui/themed'\r\n\r\nfunction DirectionSelector({ directions, onClick, selectedDirection }) {\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text h4>Select Direction:</Text>\r\n            <ButtonGroup\r\n                buttons={\r\n                    Object.entries(directions).map(([key, direction]) => (\r\n                        direction.text + (direction.loopDesc ? `\\n${direction.loopDesc} (Loop)` : '')\r\n                    ))\r\n                }\r\n                selectedIndex={selectedDirection-1}\r\n                onPress={(value) => {\r\n                    onClick(value + 1);\r\n                }}\r\n                containerStyle={{ height: 50, width: '90%' }}\r\n                buttonStyle={{ borderColor: 'skyblue', borderWidth: 1 }}\r\n                selectedButtonStyle={{ backgroundColor: 'skyblue'}}\r\n                textStyle={{ textAlign: 'center', color: 'black' }}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        alignItems: 'center',\r\n        borderTopColor: 'lightgrey',\r\n        borderTopWidth: 1,\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\nexport default DirectionSelector\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAEzB,SAASC,WAAW,EAAEC,IAAI,QAAQ,eAAe;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjD,SAASC,iBAAiBA,CAAAC,IAAA,EAA6C;EAAA,IAA1CC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAEC,iBAAiB,GAAAH,IAAA,CAAjBG,iBAAiB;EAC/D,OACIL,KAAA,CAACP,IAAI;IAACa,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1BX,IAAA,CAACF,IAAI;MAACc,EAAE;MAAAD,QAAA,EAAC;IAAiB,CAAM,CAAC,EACjCX,IAAA,CAACH,WAAW;MACRgB,OAAO,EACHC,MAAM,CAACC,OAAO,CAACV,UAAU,CAAC,CAACW,GAAG,CAAC,UAAAC,KAAA;QAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,KAAA;UAAEG,GAAG,GAAAF,KAAA;UAAEG,SAAS,GAAAH,KAAA;QAAA,OAC3CG,SAAS,CAACC,IAAI,IAAID,SAAS,CAACE,QAAQ,UAAQF,SAAS,CAACE,QAAQ,eAAY,EAAE,CAAC;MAAA,CAChF,CACJ;MACDC,aAAa,EAAEjB,iBAAiB,GAAC,CAAE;MACnCkB,OAAO,EAAE,SAAAA,QAACC,KAAK,EAAK;QAChBpB,OAAO,CAACoB,KAAK,GAAG,CAAC,CAAC;MACtB,CAAE;MACFC,cAAc,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAC7CC,WAAW,EAAE;QAAEC,WAAW,EAAE,SAAS;QAAEC,WAAW,EAAE;MAAE,CAAE;MACxDC,mBAAmB,EAAE;QAAEC,eAAe,EAAE;MAAS,CAAE;MACnDC,SAAS,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAQ;IAAE,CACtD,CAAC;EAAA,CACA,CAAC;AAEf;AAEA,IAAM5B,MAAM,GAAGb,UAAU,CAAC0C,MAAM,CAAC;EAC7B5B,SAAS,EAAE;IACP6B,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,WAAW;IAC3BC,cAAc,EAAE,CAAC;IACjBC,YAAY,EAAE;EAClB;AACJ,CAAC,CAAC;AAEF,eAAevC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}