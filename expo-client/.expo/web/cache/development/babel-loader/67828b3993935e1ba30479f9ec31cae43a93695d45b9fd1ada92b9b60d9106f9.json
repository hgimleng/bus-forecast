{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { List, Divider } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction BusStopSelector(_ref) {\n  var selectStop = _ref.selectStop,\n    selectedStop = _ref.selectedStop,\n    selectedDirection = _ref.selectedDirection,\n    routes = _ref.routes;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    expandedId = _useState2[0],\n    setExpandedId = _useState2[1];\n  function onSelectStop(stopSequence) {\n    selectStop(expandedId.toString(), stopSequence);\n  }\n  return _jsx(List.AccordionGroup, {\n    expandedId: expandedId,\n    onAccordionPress: function onAccordionPress(id) {\n      return id == expandedId ? setExpandedId(null) : setExpandedId(id);\n    },\n    children: Object.entries(routes['directions']).map(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n        directionNum = _ref3[0],\n        direction = _ref3[1];\n      return _jsx(List.Accordion, {\n        title: direction.text,\n        description: direction.loopDesc ? direction.loopDesc + \" (Loop)\" : '',\n        id: directionNum,\n        children: _jsx(ScrollView, {\n          style: styles.scrollView,\n          showsVerticalScrollIndicator: true,\n          persistentScrollbar: true,\n          nestedScrollEnabled: true,\n          children: routes['stops'][directionNum].map(function (stop, index) {\n            var isSelected = stop.stopSequence === selectedStop && expandedId === selectedDirection;\n            return _jsxs(React.Fragment, {\n              children: [_jsx(List.Item, {\n                title: stop.name,\n                onPress: function onPress() {\n                  return onSelectStop(stop.stopSequence);\n                },\n                style: [styles.listItem, isSelected ? styles.listItemSelected : null],\n                disabled: isSelected\n              }, directionNum + \"-\" + stop.stopSequence), _jsx(Divider, {})]\n            }, index);\n          })\n        })\n      }, directionNum);\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  scrollView: {\n    maxHeight: 300\n  },\n  listItem: {\n    paddingVertical: 4\n  },\n  listItemSelected: {\n    opacity: 0.5\n  }\n});\nexport default BusStopSelector;","map":{"version":3,"names":["React","useState","ScrollView","StyleSheet","List","Divider","jsx","_jsx","jsxs","_jsxs","BusStopSelector","_ref","selectStop","selectedStop","selectedDirection","routes","_useState","_useState2","_slicedToArray","expandedId","setExpandedId","onSelectStop","stopSequence","toString","AccordionGroup","onAccordionPress","id","children","Object","entries","map","_ref2","_ref3","directionNum","direction","Accordion","title","text","description","loopDesc","style","styles","scrollView","showsVerticalScrollIndicator","persistentScrollbar","nestedScrollEnabled","stop","index","isSelected","Fragment","Item","name","onPress","listItem","listItemSelected","disabled","create","maxHeight","paddingVertical","opacity"],"sources":["C:/Users/Heng/Dropbox/PC (2)/Desktop/project/bus-forecast/expo-client/components/BusStopSelector.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { ScrollView, StyleSheet } from 'react-native'\r\nimport { List, Divider } from 'react-native-paper'\r\n\r\nfunction BusStopSelector({ selectStop, selectedStop, selectedDirection, routes }) {    \r\n    \r\n    const [expandedId, setExpandedId] = useState(null)\r\n\r\n    function onSelectStop(stopSequence) {\r\n        selectStop(expandedId.toString(), stopSequence)\r\n    }\r\n\r\n    return (\r\n        <List.AccordionGroup\r\n        expandedId={expandedId}\r\n        onAccordionPress={(id) => id == expandedId ? setExpandedId(null) : setExpandedId(id)}>\r\n            {Object.entries(routes['directions']).map(([directionNum, direction]) => (\r\n                <List.Accordion\r\n                    title={direction.text}\r\n                    description={direction.loopDesc ? `${direction.loopDesc} (Loop)` : ''}\r\n                    id={directionNum}\r\n                    key={directionNum}>\r\n                        <ScrollView\r\n                            style={styles.scrollView}\r\n                            showsVerticalScrollIndicator={true}\r\n                            persistentScrollbar={true}\r\n                            nestedScrollEnabled={true}>\r\n                            {routes['stops'][directionNum].map((stop, index) => {\r\n                                let isSelected = stop.stopSequence === selectedStop && expandedId === selectedDirection\r\n\r\n                                return (<React.Fragment key={index}>\r\n                                <List.Item\r\n                                    title={stop.name}\r\n                                    onPress={() => onSelectStop(stop.stopSequence)}\r\n                                    style={[\r\n                                        styles.listItem,\r\n                                        isSelected ? styles.listItemSelected : null,\r\n                                    ]}\r\n                                    disabled={isSelected}\r\n                                    key={`${directionNum}-${stop.stopSequence}`}\r\n                                /><Divider />\r\n                                </React.Fragment>)\r\n                            })}\r\n                        </ScrollView>\r\n                </List.Accordion>\r\n            ))}\r\n        </List.AccordionGroup>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    scrollView: {\r\n        maxHeight: 300,\r\n    },\r\n    listItem: {\r\n        paddingVertical: 4,\r\n    },\r\n    listItemSelected: {\r\n        opacity: 0.5,\r\n    }\r\n});\r\n\r\nexport default BusStopSelector;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}